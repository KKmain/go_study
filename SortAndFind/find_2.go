// 24，69，80，57，13使用冒泡排序法将其排成一个从小到大的有序数列
package SortAndFind

import "fmt"

func Bubblesort(arr *[5]int) {

	fmt.Println("排序前arr=", (*arr))
	temp := 0 //临时变量(用于做交换)

	for i := 0; i < len(*arr); i++ {

		for j := 0; j < len(*arr)-1-i; j++ {
			if (*arr)[j] > (*arr)[j+1] {
				//交换
				temp = (*arr)[j]
				(*arr)[j] = (*arr)[j+1]
				(*arr)[j+1] = temp
			}
		}
	}
	fmt.Println("排序后arr=", (*arr))
}
func find_2() {

	//定义数组
	arr := [5]int{24, 69, 80, 57, 13}
	//将数组传递给一个函数，完成排序

	Bubblesort(&arr)
	fmt.Println("main arr= ", arr) //是否有序？  &arr这里是引用传递，传递进去的是地址，里面的修改会影响到外面
}

/*
1、内部排序
指将需要处理的所有数据都加载到内部存储器中进行排序
包括（交换式排序法、选择式排序法和插入式排序法）

交换式排序：
交换式排序属于内部排序法，是运用数据值比较后，依判断规则对数据位置进行交换，以达到排序的目的
交换式排序法又分为两种：
1.冒泡排序法：通过对待排序序列从后向前（从下标较大的元素开始），依次比较相邻元素的排序码，若发现逆序则交换，
使排序码较小的元素逐渐从后部移向前部（从下标较大的单元移向下标较小的单元）
2.快速排序法


2、外部排序法
数据量过大、无法全部加载到内存中，需要借助外部存储进行排序
包括（合并排序法和直接合并排序法）
*/
